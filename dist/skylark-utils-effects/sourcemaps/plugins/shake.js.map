{"version":3,"sources":["plugins/shake.js"],"names":["define","langx","$","effects","options","done","doAnimate","element","properties","duration","ease","d","Deferred","animate","resolve","promise","i","this","direction","distance","times","anims","speed","Math","round","ref","positiveMotion","animation0","animation","animation1","animation2","createPlaceholder","start","position","funcs","push","easing","reduce","prev","curr","index","array","then"],"mappings":";;;;;;;AAAAA,QACC,sBACA,sBACA,cACE,SAASC,EAAMC,EAAEC,GACpB,MAAOA,GAAQH,OAAQ,QAAS,SAAUI,EAASC,GAuBlD,QAASC,GAAUC,EAAQC,EAAYC,EAAUC,GAChD,MAAO,YACN,GAAIC,GAAI,GAAIC,EAKZ,OAHAL,GAAQM,QAASL,EAAYC,EAAUC,EAAM,WAC5CC,EAAEG,YAEIH,EAAEI,SA5BX,GAAIC,GAAI,EACPT,EAAUL,EAAGe,MACbC,EAAYd,EAAQc,WAAa,OACjCC,EAAWf,EAAQe,UAAY,GAC/BC,EAAQhB,EAAQgB,OAAS,EACzBC,EAAgB,EAARD,EAAY,EACpBE,EAAQC,KAAKC,MAAOpB,EAAQK,SAAWY,GACvCI,EAAsB,OAAdP,GAAoC,SAAdA,EAAyB,MAAQ,OAC/DQ,EAAiC,OAAdR,GAAoC,SAAdA,EACzCS,KACAC,KACAC,KACAC,IAGD3B,GAAQ4B,kBAAmBxB,EAE3B,IAAIK,GAAWX,EAAMW,QA0BrB,KAzBCoB,MAAQzB,EAAQ0B,WAAWR,GAC3BS,SAeDP,EAAYF,GAAQO,MACpBJ,EAAWH,GAAQO,OAAUN,KAAsB,GAAMP,EACzDU,EAAYJ,GAAQG,EAAWH,IAAUC,EAAiB,MAAWP,EAAW,EAChFW,EAAYL,GAAQI,EAAYJ,IAAUC,KAAsB,GAAMP,EAAW,EAG9Ee,MAAMC,KAAK7B,EAAUC,EAAQqB,EAAWN,EAAOlB,EAAQgC,SAGlDpB,EAAII,EAAOJ,IACfkB,MAAMC,KAAK7B,EAAUC,EAAQsB,EAAYP,EAAOlB,EAAQgC,SACxDF,MAAMC,KAAK7B,EAAUC,EAAQuB,EAAYR,EAAOlB,EAAQgC,QAGzDF,OAAMC,KAAK7B,EAAUC,EAAQoB,EAAYL,EAAO,EAAIlB,EAAQgC,SAE/DF,MAAMC,KAAK9B,GACX6B,MAAMG,OAAO,SAASC,EAAMC,EAAMC,EAAOC,GACtC,MAAOH,GAAKI,KAAKH,IACjB3B,EAASE","file":"../../plugins/shake.js","sourcesContent":["define( [\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"shake\", function( options, done ) {\n\n\tvar i = 1,\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"left\",\n\t\tdistance = options.distance || 20,\n\t\ttimes = options.times || 3,\n\t\tanims = times * 2 + 1,\n\t\tspeed = Math.round( options.duration / anims ),\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tpositiveMotion = ( direction === \"up\" || direction === \"left\" ),\n\t\tanimation0 = {},\n\t\tanimation = {},\n\t\tanimation1 = {},\n\t\tanimation2 = {};\n\n\n\teffects.createPlaceholder( element );\n\n\tvar Deferred = langx.Deferred;\n\t\tstart = element.position()[ref],\n\t\tfuncs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\t// Animation\n\tanimation0[ ref ] = start;\n\tanimation[ ref ] = start + ( positiveMotion ? -1 : 1 ) * distance;\n\tanimation1[ ref ] = animation[ ref ] + ( positiveMotion ? 1 : -1 ) * distance * 2;\n\tanimation2[ ref ] = animation1[ ref ] + ( positiveMotion ? -1 : 1 ) * distance * 2;\n\n\t// Animate\n    funcs.push(doAnimate(element,animation, speed, options.easing ));\n\n\t// Shakes\n\tfor ( ; i < times; i++ ) {\n\t    funcs.push(doAnimate(element,animation1, speed, options.easing ));\n\t    funcs.push(doAnimate(element,animation2, speed, options.easing ));\n\t}\n\n    funcs.push(doAnimate(element,animation0, speed /2 , options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n} );\n\n});\n"]}