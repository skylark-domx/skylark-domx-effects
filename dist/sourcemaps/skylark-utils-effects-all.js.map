{"version":3,"sources":["skylark-utils-effects-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","context","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","isIE","exec","navigator","userAgent","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","offsetWidth","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","space","tab","up","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","_normalizeArguments","effect","_default","standardAnimationOption","plugins","parseClip","outerWidth","outerHeight","clipRegex","dataSpace","dataSpaceStyle","dataSpaceAnimated","effects","mode","scaledDimensions","percent","direction","clipToBox","animation","clip","queueLength","dequeue","saveStyle","restoreStyle","getBaseline","createPlaceholder","placeholder","cssPosition","float","removePlaceholder","dataKey","cleanUp","setTransition","list","factor","unit","cssUnit","cleanup","modes","uiBackCompat","defaultMode","effectMethod","prefilter","normalizedMode","orig","cssClip","clipObj","transfer","targetFixed","fixTop","fixLeft","endPosition","startPosition","step","clipInit","baseEasings","pow","Sine","cos","PI","Circ","sqrt","Elastic","sin","Back","Bounce","pow2","bounce","easeIn","vertical","horizontal","doAnimate","upAnim","downAnim","refValue","distance","times","anims","ref","motion","funcs","reduce","curr","both","oppositeMotion","childComplete","pieces","rows","cells","animComplete","mx","my","ceil","horizFirst","animation1","animation2","backgroundColor","backgroundImage","color","baseline","temp","cProps","vProps","hProps","restore","childOriginal","childFrom","childTo","newOptions","fade","showhide","animateTo","positiveMotion","animation0","startClip","startRef","main"],"mappings":"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","file":"../skylark-utils-effects-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-effects/effects',[ \n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/fx\",\n\t\"skylark-utils/query\"\n],function(skylark,langx,fx,$) {\n\n\tvar dataSpace = \"ui-effects-\",\n\t\tdataSpaceStyle = \"ui-effects-style\",\n\t\tdataSpaceAnimated = \"ui-effects-animated\",\n\t\tplugins = {};\n\n\n\tvar effects = skylark.effects = function() {\n\n\t};\n\n\n\n\tlangx.mixin(effects,{\n\t\tdefine: function( name, mode, effect ) {\n\t\t\tif ( !effect ) {\n\t\t\t\teffect = mode;\n\t\t\t\tmode = \"effect\";\n\t\t\t}\n\n\t\t\tplugins[ name ] = effect;\n\t\t\tplugins[ name ].mode = mode;\n\n\t\t\treturn effect;\n\t\t},\n\n\t\tscaledDimensions: function( element, percent, direction ) {\n\t\t\tif ( percent === 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\theight: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\touterHeight: 0,\n\t\t\t\t\touterWidth: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar x = direction !== \"horizontal\" ? ( ( percent || 100 ) / 100 ) : 1,\n\t\t\t\ty = direction !== \"vertical\" ? ( ( percent || 100 ) / 100 ) : 1;\n\n\t\t\treturn {\n\t\t\t\theight: element.height() * y,\n\t\t\t\twidth: element.width() * x,\n\t\t\t\touterHeight: element.outerHeight() * y,\n\t\t\t\touterWidth: element.outerWidth() * x\n\t\t\t};\n\n\t\t},\n\n\t\tclipToBox: function( animation ) {\n\t\t\treturn {\n\t\t\t\twidth: animation.clip.right - animation.clip.left,\n\t\t\t\theight: animation.clip.bottom - animation.clip.top,\n\t\t\t\tleft: animation.clip.left,\n\t\t\t\ttop: animation.clip.top\n\t\t\t};\n\t\t},\n\n\t\t// Injects recently queued functions to be first in line (after \"inprogress\")\n\t\tunshift: function( element, queueLength, count ) {\n\t\t\tvar queue = element.queue();\n\n\t\t\tif ( queueLength > 1 ) {\n\t\t\t\tqueue.splice.apply( queue,\n\t\t\t\t\t[ 1, 0 ].concat( queue.splice( queueLength, count ) ) );\n\t\t\t}\n\t\t\telement.dequeue();\n\t\t},\n\n\t\tsaveStyle: function( element ) {\n\t\t\telement.data( dataSpaceStyle, element[ 0 ].style.cssText );\n\t\t},\n\n\t\trestoreStyle: function( element ) {\n\t\t\telement[ 0 ].style.cssText = element.data( dataSpaceStyle ) || \"\";\n\t\t\telement.removeData( dataSpaceStyle );\n\t\t},\n\n\t\tmode: function( element, mode ) {\n\t\t\tvar hidden = element.is( \":hidden\" );\n\n\t\t\tif ( mode === \"toggle\" ) {\n\t\t\t\tmode = hidden ? \"show\" : \"hide\";\n\t\t\t}\n\t\t\tif ( hidden ? mode === \"hide\" : mode === \"show\" ) {\n\t\t\t\tmode = \"none\";\n\t\t\t}\n\t\t\treturn mode;\n\t\t},\n\n\t\t// Translates a [top,left] array into a baseline value\n\t\tgetBaseline: function( origin, original ) {\n\t\t\tvar y, x;\n\n\t\t\tswitch ( origin[ 0 ] ) {\n\t\t\tcase \"top\":\n\t\t\t\ty = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"middle\":\n\t\t\t\ty = 0.5;\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\ty = 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ty = origin[ 0 ] / original.height;\n\t\t\t}\n\n\t\t\tswitch ( origin[ 1 ] ) {\n\t\t\tcase \"left\":\n\t\t\t\tx = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tx = 0.5;\n\t\t\t\tbreak;\n\t\t\tcase \"right\":\n\t\t\t\tx = 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tx = origin[ 1 ] / original.width;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\t// Creates a placeholder element so that the original element can be made absolute\n\t\tcreatePlaceholder: function( element ) {\n\t\t\tvar placeholder,\n\t\t\t\tcssPosition = element.css( \"position\" ),\n\t\t\t\tposition = element.position();\n\n\t\t\t// Lock in margins first to account for form elements, which\n\t\t\t// will change margin if you explicitly set height\n\t\t\t// see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380\n\t\t\t// Support: Safari\n\t\t\telement.css( {\n\t\t\t\tmarginTop: element.css( \"marginTop\" ),\n\t\t\t\tmarginBottom: element.css( \"marginBottom\" ),\n\t\t\t\tmarginLeft: element.css( \"marginLeft\" ),\n\t\t\t\tmarginRight: element.css( \"marginRight\" )\n\t\t\t} )\n\t\t\t.outerWidth( element.outerWidth() )\n\t\t\t.outerHeight( element.outerHeight() );\n\n\t\t\tif ( /^(static|relative)/.test( cssPosition ) ) {\n\t\t\t\tcssPosition = \"absolute\";\n\n\t\t\t\tplaceholder = $( \"<\" + element[ 0 ].nodeName + \">\" ).insertAfter( element ).css( {\n\n\t\t\t\t\t// Convert inline to inline block to account for inline elements\n\t\t\t\t\t// that turn to inline block based on content (like img)\n\t\t\t\t\tdisplay: /^(inline|ruby)/.test( element.css( \"display\" ) ) ?\n\t\t\t\t\t\t\"inline-block\" :\n\t\t\t\t\t\t\"block\",\n\t\t\t\t\tvisibility: \"hidden\",\n\n\t\t\t\t\t// Margins need to be set to account for margin collapse\n\t\t\t\t\tmarginTop: element.css( \"marginTop\" ),\n\t\t\t\t\tmarginBottom: element.css( \"marginBottom\" ),\n\t\t\t\t\tmarginLeft: element.css( \"marginLeft\" ),\n\t\t\t\t\tmarginRight: element.css( \"marginRight\" ),\n\t\t\t\t\t\"float\": element.css( \"float\" )\n\t\t\t\t} )\n\t\t\t\t.outerWidth( element.outerWidth() )\n\t\t\t\t.outerHeight( element.outerHeight() )\n\t\t\t\t.addClass( \"ui-effects-placeholder\" );\n\n\t\t\t\telement.data( dataSpace + \"placeholder\", placeholder );\n\t\t\t}\n\n\t\t\telement.css( {\n\t\t\t\tposition: cssPosition,\n\t\t\t\tleft: position.left,\n\t\t\t\ttop: position.top\n\t\t\t} );\n\n\t\t\treturn placeholder;\n\t\t},\n\n\t\tremovePlaceholder: function( element ) {\n\t\t\tvar dataKey = dataSpace + \"placeholder\",\n\t\t\t\t\tplaceholder = element.data( dataKey );\n\n\t\t\tif ( placeholder ) {\n\t\t\t\tplaceholder.remove();\n\t\t\t\telement.removeData( dataKey );\n\t\t\t}\n\t\t},\n\n\t\t// Removes a placeholder if it exists and restores\n\t\t// properties that were modified during placeholder creation\n\t\tcleanUp: function( element ) {\n\t\t\teffects.restoreStyle( element );\n\t\t\teffects.removePlaceholder( element );\n\t\t},\n\n\t\tsetTransition: function( element, list, factor, value ) {\n\t\t\tvalue = value || {};\n\t\t\tlangx.each( list, function( i, x ) {\n\t\t\t\tvar unit = element.cssUnit( x );\n\t\t\t\tif ( unit[ 0 ] > 0 ) {\n\t\t\t\t\tvalue[ x ] = unit[ 0 ] * factor + unit[ 1 ];\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn value;\n\t\t}\n\t});\n\n\t// Return an effect options object for the given parameters:\n\tfunction _normalizeArguments( effect, options, speed, callback ) {\n\n\t\t// Allow passing all options as the first parameter\n\t\tif ( langx.isPlainObject( effect ) ) {\n\t\t\toptions = effect;\n\t\t\teffect = effect.effect;\n\t\t}\n\n\t\t// Convert to an object\n\t\teffect = { effect: effect };\n\n\t\t// Catch (effect, null, ...)\n\t\tif ( options == null ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\t// Catch (effect, callback)\n\t\tif ( langx.isFunction( options ) ) {\n\t\t\tcallback = options;\n\t\t\tspeed = null;\n\t\t\toptions = {};\n\t\t}\n\n\t\t// Catch (effect, speed, ?)\n\t\tif ( typeof options === \"number\" || fx.speeds[ options ] ) {\n\t\t\tcallback = speed;\n\t\t\tspeed = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\t// Catch (effect, options, callback)\n\t\tif ( langx.isFunction( speed ) ) {\n\t\t\tcallback = speed;\n\t\t\tspeed = null;\n\t\t}\n\n\t\t// Add options to effect\n\t\tif ( options ) {\n\t\t\tlangx.mixin( effect, options );\n\t\t}\n\n\t\tspeed = speed || options.duration;\n\t\teffect.duration = fx.off ? 0 :\n\t\t\ttypeof speed === \"number\" ? speed :\n\t\t\tspeed in $.fx.speeds ? fx.speeds[ speed ] :\n\t\t\tfx.speeds._default;\n\n\t\teffect.complete = callback || options.complete;\n\n\t\treturn effect;\n\t}\n\n\tfunction standardAnimationOption( option ) {\n\n\t\t// Valid standard speeds (nothing, number, named speed)\n\t\tif ( !option || typeof option === \"number\" || fx.speeds[ option ] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Invalid strings - treat as \"normal\" speed\n\t\tif ( typeof option === \"string\" && !plugins[ option ] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Complete callback\n\t\tif ( langx.isFunction( option ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Options hash (but not naming an effect)\n\t\tif ( typeof option === \"object\" && !option.effect ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Didn't match any standard API\n\t\treturn false;\n\t}\n\n\tlangx.mixin($.fn,{\n\t\teffect: function( /* effect, options, speed, callback */ ) {\n\t\t\tvar args = _normalizeArguments.apply( this, arguments ),\n\t\t\t\teffectMethod = plugins[ args.effect ],\n\t\t\t\tdefaultMode = effectMethod.mode,\n\t\t\t\tqueue = args.queue,\n\t\t\t\tqueueName = queue || \"fx\",\n\t\t\t\tcomplete = args.complete,\n\t\t\t\tmode = args.mode,\n\t\t\t\tmodes = [],\n\t\t\t\tprefilter = function( next ) {\n\t\t\t\t\tvar el = $( this ),\n\t\t\t\t\t\tnormalizedMode = effects.mode( el, mode ) || defaultMode;\n\n\t\t\t\t\t// Sentinel for duck-punching the :animated pseudo-selector\n\t\t\t\t\tel.data( dataSpaceAnimated, true );\n\n\t\t\t\t\t// Save effect mode for later use,\n\t\t\t\t\t// we can't just call effects.mode again later,\n\t\t\t\t\t// as the .show() below destroys the initial state\n\t\t\t\t\tmodes.push( normalizedMode );\n\n\t\t\t\t\t// See $.uiBackCompat inside of run() for removal of defaultMode in 1.13\n\t\t\t\t\tif ( defaultMode && ( normalizedMode === \"show\" ||\n\t\t\t\t\t\t\t( normalizedMode === defaultMode && normalizedMode === \"hide\" ) ) ) {\n\t\t\t\t\t\tel.show();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !defaultMode || normalizedMode !== \"none\" ) {\n\t\t\t\t\t\teffects.saveStyle( el );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( langx.isFunction( next ) ) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tif ( fx.off || !effectMethod ) {\n\n\t\t\t\t// Delegate to the original method (e.g., .show()) if possible\n\t\t\t\tif ( mode ) {\n\t\t\t\t\treturn this[ mode ]( args.duration, complete );\n\t\t\t\t} else {\n\t\t\t\t\treturn this.each( function() {\n\t\t\t\t\t\tif ( complete ) {\n\t\t\t\t\t\t\tcomplete.call( this );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction run( next ) {\n\t\t\t\tvar elem = $( this );\n\n\t\t\t\tfunction cleanup() {\n\t\t\t\t\telem.removeData( dataSpaceAnimated );\n\n\t\t\t\t\teffects.cleanUp( elem );\n\n\t\t\t\t\tif ( args.mode === \"hide\" ) {\n\t\t\t\t\t\telem.hide();\n\t\t\t\t\t}\n\n\t\t\t\t\tdone();\n\t\t\t\t}\n\n\t\t\t\tfunction done() {\n\t\t\t\t\tif ( langx.isFunction( complete ) ) {\n\t\t\t\t\t\tcomplete.call( elem[ 0 ] );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( langx.isFunction( next ) ) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mode option on a per element basis,\n\t\t\t\t// as toggle can be either show or hide depending on element state\n\t\t\t\targs.mode = modes.shift();\n\n\t\t\t\tif ( $.uiBackCompat !== false && !defaultMode ) {\n\t\t\t\t\tif ( elem.is( \":hidden\" ) ? mode === \"hide\" : mode === \"show\" ) {\n\n\t\t\t\t\t\t// Call the core method to track \"olddisplay\" properly\n\t\t\t\t\t\telem[ mode ]();\n\t\t\t\t\t\tdone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\teffectMethod.call( elem[ 0 ], args, done );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( args.mode === \"none\" ) {\n\n\t\t\t\t\t\t// Call the core method to track \"olddisplay\" properly\n\t\t\t\t\t\telem[ mode ]();\n\t\t\t\t\t\tdone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\teffectMethod.call( elem[ 0 ], args, cleanup );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run prefilter on all elements first to ensure that\n\t\t\t// any showing or hiding happens before placeholder creation,\n\t\t\t// which ensures that any layout changes are correctly captured.\n\t\t\t//return queue === false ?\n\t\t\t//\tthis.each( prefilter ).each( run ) :\n\t\t\t//\tthis.queue( queueName, prefilter ).queue( queueName, run );\n\n\t\t\treturn this.each( prefilter ).each( run );\t\n\t\t},\n\n\t\tshow: ( function( orig ) {\n\t\t\treturn function( option ) {\n\t\t\t\tif ( standardAnimationOption( option ) ) {\n\t\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t\t} else {\n\t\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\n\t\t\t\t\targs.mode = \"show\";\n\t\t\t\t\treturn this.effect.call( this, args );\n\t\t\t\t}\n\t\t\t};\n\t\t} )( $.fn.show ),\n\n\t\thide: ( function( orig ) {\n\t\t\treturn function( option ) {\n\t\t\t\tif ( standardAnimationOption( option ) ) {\n\t\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t\t} else {\n\t\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\n\t\t\t\t\targs.mode = \"hide\";\n\t\t\t\t\treturn this.effect.call( this, args );\n\t\t\t\t}\n\t\t\t};\n\t\t} )( $.fn.hide ),\n\n\t\ttoggle: ( function( orig ) {\n\t\t\treturn function( option ) {\n\t\t\t\tif ( standardAnimationOption( option ) || typeof option === \"boolean\" ) {\n\t\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t\t} else {\n\t\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\n\t\t\t\t\targs.mode = \"toggle\";\n\t\t\t\t\treturn this.effect.call( this, args );\n\t\t\t\t}\n\t\t\t};\n\t\t} )( $.fn.toggle ),\n\n\t\tcssUnit: function( key ) {\n\t\t\tvar style = this.css( key ),\n\t\t\t\tval = [];\n\n\t\t\tlangx.each( [ \"em\", \"px\", \"%\", \"pt\" ], function( i, unit ) {\n\t\t\t\tif ( style.indexOf( unit ) > 0 ) {\n\t\t\t\t\tval = [ parseFloat( style ), unit ];\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\treturn val;\n\t\t},\n\n\t\tcssClip: function( clipObj ) {\n\t\t\tif ( clipObj ) {\n\t\t\t\treturn this.css( \"clip\", \"rect(\" + clipObj.top + \"px \" + clipObj.right + \"px \" +\n\t\t\t\t\tclipObj.bottom + \"px \" + clipObj.left + \"px)\" );\n\t\t\t}\n\t\t\treturn parseClip( this.css( \"clip\" ), this );\n\t\t},\n\n\t\ttransfer: function( options, done ) {\n\t\t\tvar element = $( this ),\n\t\t\t\ttarget = $( options.to ),\n\t\t\t\ttargetFixed = target.css( \"position\" ) === \"fixed\",\n\t\t\t\tbody = $( \"body\" ),\n\t\t\t\tfixTop = targetFixed ? body.scrollTop() : 0,\n\t\t\t\tfixLeft = targetFixed ? body.scrollLeft() : 0,\n\t\t\t\tendPosition = target.offset(),\n\t\t\t\tanimation = {\n\t\t\t\t\ttop: endPosition.top - fixTop,\n\t\t\t\t\tleft: endPosition.left - fixLeft,\n\t\t\t\t\theight: target.innerHeight(),\n\t\t\t\t\twidth: target.innerWidth()\n\t\t\t\t},\n\t\t\t\tstartPosition = element.offset(),\n\t\t\t\ttransfer = $( \"<div class='ui-effects-transfer'></div>\" )\n\t\t\t\t\t.appendTo( \"body\" )\n\t\t\t\t\t.addClass( options.className )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\ttop: startPosition.top - fixTop,\n\t\t\t\t\t\tleft: startPosition.left - fixLeft,\n\t\t\t\t\t\theight: element.innerHeight(),\n\t\t\t\t\t\twidth: element.innerWidth(),\n\t\t\t\t\t\tposition: targetFixed ? \"fixed\" : \"absolute\"\n\t\t\t\t\t} )\n\t\t\t\t\t.animate( animation, options.duration, options.easing, function() {\n\t\t\t\t\t\ttransfer.remove();\n\t\t\t\t\t\tif ( langx.isFunction( done ) ) {\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t}\n\t});\n\n\tfunction parseClip( str, element ) {\n\t\t\tvar outerWidth = element.outerWidth(),\n\t\t\t\touterHeight = element.outerHeight(),\n\t\t\t\tclipRegex = /^rect\\((-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto)\\)$/,\n\t\t\t\tvalues = clipRegex.exec( str ) || [ \"\", 0, outerWidth, outerHeight, 0 ];\n\n\t\t\treturn {\n\t\t\t\ttop: parseFloat( values[ 1 ] ) || 0,\n\t\t\t\tright: values[ 2 ] === \"auto\" ? outerWidth : parseFloat( values[ 2 ] ),\n\t\t\t\tbottom: values[ 3 ] === \"auto\" ? outerHeight : parseFloat( values[ 3 ] ),\n\t\t\t\tleft: parseFloat( values[ 4 ] ) || 0\n\t\t\t};\n\t}\n\n\tfx.step = fx.step || {};\n\n\tfx.step.clip = function( fx ) {\n\t\tif ( !fx.clipInit ) {\n\t\t\tfx.start = $( fx.elem ).cssClip();\n\t\t\tif ( typeof fx.end === \"string\" ) {\n\t\t\t\tfx.end = parseClip( fx.end, fx.elem );\n\t\t\t}\n\t\t\tfx.clipInit = true;\n\t\t}\n\n\t\t$( fx.elem ).cssClip( {\n\t\t\ttop: fx.pos * ( fx.end.top - fx.start.top ) + fx.start.top,\n\t\t\tright: fx.pos * ( fx.end.right - fx.start.right ) + fx.start.right,\n\t\t\tbottom: fx.pos * ( fx.end.bottom - fx.start.bottom ) + fx.start.bottom,\n\t\t\tleft: fx.pos * ( fx.end.left - fx.start.left ) + fx.start.left\n\t\t} );\n\t};\n\n\n\t/******************************************************************************/\n\t/*********************************** EASING ***********************************/\n\t/******************************************************************************/\n\n\t// Based on easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n\tvar baseEasings = {};\n\n\tlangx.each( [ \"Quad\", \"Cubic\", \"Quart\", \"Quint\", \"Expo\" ], function( i, name ) {\n\t\tbaseEasings[ name ] = function( p ) {\n\t\t\treturn Math.pow( p, i + 2 );\n\t\t};\n\t} );\n\n\tlangx.mixin( baseEasings, {\n\t\tSine: function( p ) {\n\t\t\treturn 1 - Math.cos( p * Math.PI / 2 );\n\t\t},\n\t\tCirc: function( p ) {\n\t\t\treturn 1 - Math.sqrt( 1 - p * p );\n\t\t},\n\t\tElastic: function( p ) {\n\t\t\treturn p === 0 || p === 1 ? p :\n\t\t\t\t-Math.pow( 2, 8 * ( p - 1 ) ) * Math.sin( ( ( p - 1 ) * 80 - 7.5 ) * Math.PI / 15 );\n\t\t},\n\t\tBack: function( p ) {\n\t\t\treturn p * p * ( 3 * p - 2 );\n\t\t},\n\t\tBounce: function( p ) {\n\t\t\tvar pow2,\n\t\t\t\tbounce = 4;\n\n\t\t\twhile ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\n\t\t\treturn 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );\n\t\t}\n\t} );\n\n\tfx.easing = fx.easing || {};\n\n\tlangx.each( baseEasings, function( name, easeIn ) {\n\t\tfx.easing[ \"easeIn\" + name ] = easeIn;\n\t\tfx.easing[ \"easeOut\" + name ] = function( p ) {\n\t\t\treturn 1 - easeIn( 1 - p );\n\t\t};\n\t\tfx.easing[ \"easeInOut\" + name ] = function( p ) {\n\t\t\treturn p < 0.5 ?\n\t\t\t\teaseIn( p * 2 ) / 2 :\n\t\t\t\t1 - easeIn( p * -2 + 2 ) / 2;\n\t\t};\n\t} );\n\n\n\treturn effects;\n\n});\n\ndefine( 'skylark-utils-effects/plugins/blind',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"blind\", \"hide\", function( options, done ) {\n\tvar map = {\n\t\t\tup: [ \"bottom\", \"top\" ],\n\t\t\tvertical: [ \"bottom\", \"top\" ],\n\t\t\tdown: [ \"top\", \"bottom\" ],\n\t\t\tleft: [ \"right\", \"left\" ],\n\t\t\thorizontal: [ \"right\", \"left\" ],\n\t\t\tright: [ \"left\", \"right\" ]\n\t\t},\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"up\",\n\t\tstart = element.cssClip(),\n\t\tanimate = { clip: langx.mixin( {}, start ) },\n\t\tplaceholder = effects.createPlaceholder( element );\n\n\tanimate.clip[ map[ direction ][ 0 ] ] = animate.clip[ map[ direction ][ 1 ] ];\n\n\tif ( options.mode === \"show\" ) {\n\t\telement.cssClip( animate.clip );\n\t\tif ( placeholder ) {\n\t\t\tplaceholder.css( effects.clipToBox( animate ) );\n\t\t}\n\n\t\tanimate.clip = start;\n\t}\n\n\tif ( placeholder ) {\n\t\tplaceholder.animate( effects.clipToBox( animate ), options.duration, options.easing );\n\t}\n\n\telement.animate( animate, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/bounce',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"bounce\", function( options, done ) {\n\tvar upAnim, downAnim, refValue,\n\t\telement = $( this ),\n\n\t\t// Defaults:\n\t\tmode = options.mode,\n\t\thide = mode === \"hide\",\n\t\tshow = mode === \"show\",\n\t\tdirection = options.direction || \"up\",\n\t\tstart,\n\t\tdistance = options.distance,\n\t\ttimes = options.times || 5,\n\n\t\t// Number of internal animations\n\t\tanims = times * 2 + ( show || hide ? 1 : 0 ),\n\t\tspeed = options.duration / anims,\n\t\teasing = options.easing,\n\n\t\t// Utility:\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tmotion = ( direction === \"up\" || direction === \"left\" ),\n\t\ti = 0;\n\n\teffects.createPlaceholder( element );\n\n\tvar Deferred = langx.Deferred;\n\tvar funcs = [];\n\n\trefValue = element.css( ref );\n\n\t// Default distance for the BIGGEST bounce is the outer Distance / 3\n\tif ( !distance ) {\n\t\tdistance = element[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]() / 3;\n\t}\n\tstart = element.position()[ref];\n\n\tif ( show ) {\n\t\tdownAnim = { opacity: 1 };\n\t\tdownAnim[ ref ] = refValue;\n\n\t\t// If we are showing, force opacity 0 and set the initial position\n\t\t// then do the \"first\" animation\n\t\telement\n\t\t\t.css( \"opacity\", 0 )\n\t\t\t.css( ref, start + (motion ? -distance * 2 : distance * 2 ));\n\n\t\tfuncs.push(doAnimate(element,downAnim, speed, easing));\n\t}\n\n\t// Start at the smallest distance if we are hiding\n\tif ( hide ) {\n\t\tdistance = distance / Math.pow( 2, times - 1 );\n\t}\n\n\tdownAnim = {};\n\tdownAnim[ ref ] = refValue;\n\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, easing ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\t// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here\n\tfor ( ; i < times; i++ ) {\n\t\tupAnim = {};\n\t\tupAnim[ ref ] = start + ( motion ? -distance : distance) ;\n\n\t\tfuncs.push(doAnimate(element,upAnim, speed, easing));\n\n\t\tfuncs.push(doAnimate(element,downAnim, speed, easing));\n\n\t\tdistance = hide ? distance * 2 : distance / 2;\n\t}\n\n\t// Last Bounce when Hiding\n\tif ( hide ) {\n\t\tupAnim = { opacity: 0 };\n\t\tupAnim[ ref ] = start + ( motion ? -1 * distance : distance) ;\n\n\t\tfuncs.push(doAnimate(element,upAnim, speed, easing ));\n\t}\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/clip',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"clip\", \"hide\", function( options, done ) {\n\tvar start,\n\t\tanimate = {},\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"vertical\",\n\t\tboth = direction === \"both\",\n\t\thorizontal = both || direction === \"horizontal\",\n\t\tvertical = both || direction === \"vertical\";\n\n\tstart = element.cssClip();\n\tanimate.clip = {\n\t\ttop: vertical ? ( start.bottom - start.top ) / 2 : start.top,\n\t\tright: horizontal ? ( start.right - start.left ) / 2 : start.right,\n\t\tbottom: vertical ? ( start.bottom - start.top ) / 2 : start.bottom,\n\t\tleft: horizontal ? ( start.right - start.left ) / 2 : start.left\n\t};\n\n\teffects.createPlaceholder( element );\n\n\tif ( options.mode === \"show\" ) {\n\t\telement.cssClip( animate.clip );\n\t\tanimate.clip = start;\n\t}\n\n\telement.animate( animate, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/drop',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"drop\", \"hide\", function( options, done ) {\n\n\tvar distance,\n\t\telement = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\tdirection = options.direction || \"left\",\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tmotion = ( direction === \"up\" || direction === \"left\" ) ? -1 : 1,\n\t\toppositeMotion =  motion * -1,\n\t\tanimation = {\n\t\t\topacity: 0\n\t\t},\n\t\tstart = element.position()[ref];\n\n\teffects.createPlaceholder( element );\n\n\tdistance = options.distance ||\n\t\telement[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]( true ) / 2;\n\n\tanimation[ ref ] = start + motion * distance;\n\n\tif ( show ) {\n\t\telement.css( animation );\n\n\t\tanimation[ ref ] = start + oppositeMotion * distance;\n\t\tanimation.opacity = 1;\n\t}\n\n\t// Animate\n\telement.animate( animation, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/explode',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"explode\", \"hide\", function( options, done ) {\n\n\tvar i, j, left, top, mx, my,\n\t\trows = options.pieces ? Math.round( Math.sqrt( options.pieces ) ) : 3,\n\t\tcells = rows,\n\t\telement = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\n\t\t// Show and then visibility:hidden the element before calculating offset\n\t\toffset = element.show().css( \"visibility\", \"hidden\" ).offset(),\n\n\t\t// Width and height of a piece\n\t\twidth = Math.ceil( element.outerWidth() / cells ),\n\t\theight = Math.ceil( element.outerHeight() / rows ),\n\t\tpieces = [];\n\n\t// Children animate complete:\n\tfunction childComplete() {\n\t\tpieces.push( this );\n\t\tif ( pieces.length === rows * cells ) {\n\t\t\tanimComplete();\n\t\t}\n\t}\n\n\t// Clone the element for each row and cell.\n\tfor ( i = 0; i < rows; i++ ) { // ===>\n\t\ttop = offset.top + i * height;\n\t\tmy = i - ( rows - 1 ) / 2;\n\n\t\tfor ( j = 0; j < cells; j++ ) { // |||\n\t\t\tleft = offset.left + j * width;\n\t\t\tmx = j - ( cells - 1 ) / 2;\n\n\t\t\t// Create a clone of the now hidden main element that will be absolute positioned\n\t\t\t// within a wrapper div off the -left and -top equal to size of our pieces\n\t\t\telement\n\t\t\t\t.clone()\n\t\t\t\t.appendTo( \"body\" )\n\t\t\t\t.wrap( \"<div></div>\" )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tvisibility: \"visible\",\n\t\t\t\t\tleft: -j * width,\n\t\t\t\t\ttop: -i * height\n\t\t\t\t} )\n\n\t\t\t\t// Select the wrapper - make it overflow: hidden and absolute positioned based on\n\t\t\t\t// where the original was located +left and +top equal to the size of pieces\n\t\t\t\t.parent()\n\t\t\t\t\t.addClass( \"ui-effects-explode\" )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tleft: left + ( show ? mx * width : 0 ),\n\t\t\t\t\t\ttop: top + ( show ? my * height : 0 ),\n\t\t\t\t\t\topacity: show ? 0 : 1\n\t\t\t\t\t} )\n\t\t\t\t\t.animate( {\n\t\t\t\t\t\tleft: left + ( show ? 0 : mx * width ),\n\t\t\t\t\t\ttop: top + ( show ? 0 : my * height ),\n\t\t\t\t\t\topacity: show ? 1 : 0\n\t\t\t\t\t}, options.duration || 500, options.easing, childComplete );\n\t\t}\n\t}\n\n\tfunction animComplete() {\n\t\telement.css( {\n\t\t\tvisibility: \"visible\"\n\t\t} );\n\t\t$( pieces ).remove();\n\t\tdone();\n\t}\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/fade',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\n\treturn effects.define( \"fade\", \"toggle\", function( options, done ) {\n\t\tvar show = options.mode === \"show\";\n\n\t\t$( this )\n\t\t\t.css( \"opacity\", show ? 0 : 1 )\n\t\t\t.animate( {\n\t\t\t\topacity: show ? 1 : 0\n\t\t\t}, {\n\t\t\t\tqueue: false,\n\t\t\t\tduration: options.duration,\n\t\t\t\teasing: options.easing,\n\t\t\t\tcomplete: done\n\t\t\t} );\n\t});\n\n});\n\ndefine( 'skylark-utils-effects/plugins/fold',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"fold\", \"hide\", function( options, done ) {\n\n\t// Create element\n\tvar element = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\thide = mode === \"hide\",\n\t\tsize = options.size || 15,\n\t\tpercent = /([0-9]+)%/.exec( size ),\n\t\thorizFirst = !!options.horizFirst,\n\t\tref = horizFirst ? [ \"right\", \"bottom\" ] : [ \"bottom\", \"right\" ],\n\t\tduration = options.duration / 2,\n\n\t\tplaceholder = effects.createPlaceholder( element ),\n\n\t\tstart = element.cssClip(),\n\t\tanimation1 = { clip: langx.mixin( {}, start ) },\n\t\tanimation2 = { clip: langx.mixin( {}, start ) },\n\n\t\tdistance = [ start[ ref[ 0 ] ], start[ ref[ 1 ] ] ];\n\n\n\tif ( percent ) {\n\t\tsize = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];\n\t}\n\tanimation1.clip[ ref[ 0 ] ] = size;\n\tanimation2.clip[ ref[ 0 ] ] = size;\n\tanimation2.clip[ ref[ 1 ] ] = 0;\n\n\tif ( show ) {\n\t\telement.cssClip( animation2.clip );\n\t\tif ( placeholder ) {\n\t\t\tplaceholder.css( effects.clipToBox( animation2 ) );\n\t\t}\n\n\t\tanimation2.clip = start;\n\t}\n\n\t// Animate\n\tvar Deferred = langx.Deferred;\n\tvar funcs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\tif ( placeholder ) {\n\t\tfuncs.push(doAnimate(placeholder,effects.clipToBox( animation1 ), duration, options.easing ));\n\t\tfuncs.push(doAnimate(placeholder,effects.clipToBox( animation2 ), duration, options.easing ));\n\t}\n\n\tfuncs.push(doAnimate(element,animation1, duration, options.easing ));\n\tfuncs.push(doAnimate(element,animation2, duration, options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\t\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/highlight',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"highlight\", \"show\", function( options, done ) {\n\tvar element = $( this ),\n\t\tanimation = {\n\t\t\tbackgroundColor: element.css( \"backgroundColor\" )\n\t\t};\n\n\tif ( options.mode === \"hide\" ) {\n\t\tanimation.opacity = 0;\n\t}\n\n\teffects.saveStyle( element );\n\n\telement\n\t\t.css( {\n\t\t\tbackgroundImage: \"none\",\n\t\t\tbackgroundColor: options.color || \"#ffff99\"\n\t\t} )\n\t\t.animate( animation, {\n\t\t\tqueue: false,\n\t\t\tduration: options.duration,\n\t\t\teasing: options.easing,\n\t\t\tcomplete: done\n\t\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/size',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"size\", function( options, done ) {\n\n\t// Create element\n\tvar baseline, factor, temp,\n\t\telement = $( this ),\n\n\t\t// Copy for children\n\t\tcProps = [ \"fontSize\" ],\n\t\tvProps = [ \"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\" ],\n\t\thProps = [ \"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\" ],\n\n\t\t// Set options\n\t\tmode = options.mode,\n\t\trestore = mode !== \"effect\",\n\t\tscale = options.scale || \"both\",\n\t\torigin = options.origin || [ \"middle\", \"center\" ],\n\t\tposition = element.css( \"position\" ),\n\t\tpos = element.position(),\n\t\toriginal = effects.scaledDimensions( element ),\n\t\tfrom = options.from || original,\n\t\tto = options.to || effects.scaledDimensions( element, 0 );\n\n\teffects.createPlaceholder( element );\n\n\tif ( mode === \"show\" ) {\n\t\ttemp = from;\n\t\tfrom = to;\n\t\tto = temp;\n\t}\n\n\t// Set scaling factor\n\tfactor = {\n\t\tfrom: {\n\t\t\ty: from.height / original.height,\n\t\t\tx: from.width / original.width\n\t\t},\n\t\tto: {\n\t\t\ty: to.height / original.height,\n\t\t\tx: to.width / original.width\n\t\t}\n\t};\n\n\t// Scale the css box\n\tif ( scale === \"box\" || scale === \"both\" ) {\n\n\t\t// Vertical props scaling\n\t\tif ( factor.from.y !== factor.to.y ) {\n\t\t\tfrom = effects.setTransition( element, vProps, factor.from.y, from );\n\t\t\tto = effects.setTransition( element, vProps, factor.to.y, to );\n\t\t}\n\n\t\t// Horizontal props scaling\n\t\tif ( factor.from.x !== factor.to.x ) {\n\t\t\tfrom = effects.setTransition( element, hProps, factor.from.x, from );\n\t\t\tto = effects.setTransition( element, hProps, factor.to.x, to );\n\t\t}\n\t}\n\n\t// Scale the content\n\tif ( scale === \"content\" || scale === \"both\" ) {\n\n\t\t// Vertical props scaling\n\t\tif ( factor.from.y !== factor.to.y ) {\n\t\t\tfrom = effects.setTransition( element, cProps, factor.from.y, from );\n\t\t\tto = effects.setTransition( element, cProps, factor.to.y, to );\n\t\t}\n\t}\n\n\t// Adjust the position properties based on the provided origin points\n\tif ( origin ) {\n\t\tbaseline = effects.getBaseline( origin, original );\n\t\tfrom.top = ( original.outerHeight - from.outerHeight ) * baseline.y + pos.top;\n\t\tfrom.left = ( original.outerWidth - from.outerWidth ) * baseline.x + pos.left;\n\t\tto.top = ( original.outerHeight - to.outerHeight ) * baseline.y + pos.top;\n\t\tto.left = ( original.outerWidth - to.outerWidth ) * baseline.x + pos.left;\n\t}\n\telement.css( from );\n\n\t// Animate the children if desired\n\tif ( scale === \"content\" || scale === \"both\" ) {\n\n\t\tvProps = vProps.concat( [ \"marginTop\", \"marginBottom\" ] ).concat( cProps );\n\t\thProps = hProps.concat( [ \"marginLeft\", \"marginRight\" ] );\n\n\t\t// Only animate children with width attributes specified\n\t\t// TODO: is this right? should we include anything with css width specified as well\n\t\telement.find( \"*[width]\" ).each( function() {\n\t\t\tvar child = $( this ),\n\t\t\t\tchildOriginal = effects.scaledDimensions( child ),\n\t\t\t\tchildFrom = {\n\t\t\t\t\theight: childOriginal.height * factor.from.y,\n\t\t\t\t\twidth: childOriginal.width * factor.from.x,\n\t\t\t\t\touterHeight: childOriginal.outerHeight * factor.from.y,\n\t\t\t\t\touterWidth: childOriginal.outerWidth * factor.from.x\n\t\t\t\t},\n\t\t\t\tchildTo = {\n\t\t\t\t\theight: childOriginal.height * factor.to.y,\n\t\t\t\t\twidth: childOriginal.width * factor.to.x,\n\t\t\t\t\touterHeight: childOriginal.height * factor.to.y,\n\t\t\t\t\touterWidth: childOriginal.width * factor.to.x\n\t\t\t\t};\n\n\t\t\t// Vertical props scaling\n\t\t\tif ( factor.from.y !== factor.to.y ) {\n\t\t\t\tchildFrom = effects.setTransition( child, vProps, factor.from.y, childFrom );\n\t\t\t\tchildTo = effects.setTransition( child, vProps, factor.to.y, childTo );\n\t\t\t}\n\n\t\t\t// Horizontal props scaling\n\t\t\tif ( factor.from.x !== factor.to.x ) {\n\t\t\t\tchildFrom = effects.setTransition( child, hProps, factor.from.x, childFrom );\n\t\t\t\tchildTo = effects.setTransition( child, hProps, factor.to.x, childTo );\n\t\t\t}\n\n\t\t\tif ( restore ) {\n\t\t\t\teffects.saveStyle( child );\n\t\t\t}\n\n\t\t\t// Animate children\n\t\t\tchild.css( childFrom );\n\t\t\tchild.animate( childTo, options.duration, options.easing, function() {\n\n\t\t\t\t// Restore children\n\t\t\t\tif ( restore ) {\n\t\t\t\t\teffects.restoreStyle( child );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Animate\n\telement.animate( to, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: function() {\n\n\t\t\tvar offset = element.offset();\n\n\t\t\tif ( to.opacity === 0 ) {\n\t\t\t\telement.css( \"opacity\", from.opacity );\n\t\t\t}\n\n\t\t\tif ( !restore ) {\n\t\t\t\telement\n\t\t\t\t\t.css( \"position\", position === \"static\" ? \"relative\" : position )\n\t\t\t\t\t.offset( offset );\n\n\t\t\t\t// Need to save style here so that automatic style restoration\n\t\t\t\t// doesn't restore to the original styles from before the animation.\n\t\t\t\teffects.saveStyle( element );\n\t\t\t}\n\n\t\t\tdone();\n\t\t}\n\t} );\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/scale',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\",\n\t\"./size\"\n], function(langx,$,effects,size) {\n\nreturn effects.define( \"scale\", function( options, done ) {\n\n\t// Create element\n\tvar el = $( this ),\n\t\tmode = options.mode,\n\t\tpercent = parseInt( options.percent, 10 ) ||\n\t\t\t( parseInt( options.percent, 10 ) === 0 ? 0 : ( mode !== \"effect\" ? 0 : 100 ) ),\n\n\t\tnewOptions = langx.mixin( {\n\t\t\tfrom: effects.scaledDimensions( el ),\n\t\t\tto: effects.scaledDimensions( el, percent, options.direction || \"both\" ),\n\t\t\torigin: options.origin || [ \"middle\", \"center\" ]\n\t\t}, options );\n\n\t// Fade option to support puff\n\tif ( options.fade ) {\n\t\tnewOptions.from.opacity = 1;\n\t\tnewOptions.to.opacity = 0;\n\t}\n\n\tsize.call( this, newOptions, done );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/puff',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\",\n\t\"./scale\"\n], function(langx,$,effects,scale) {\n\n\treturn effects.define( \"puff\", \"hide\", function( options, done ) {\n\t\tvar newOptions = langx.mixin( {}, options, {\n\t\t\tfade: true,\n\t\t\tpercent: parseInt( options.percent, 10 ) || 150\n\t\t} );\n\n\t\tscale.call( this, newOptions, done );\n\t});\n\n});\n\ndefine( 'skylark-utils-effects/plugins/pulsate',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"pulsate\", \"show\", function( options, done ) {\n\tvar element = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\thide = mode === \"hide\",\n\t\tshowhide = show || hide,\n\n\t\t// Showing or hiding leaves off the \"last\" animation\n\t\tanims = ( ( options.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),\n\t\tduration = options.duration / anims,\n\t\tanimateTo = 0,\n\t\ti = 1;\n\n\tif ( show || !element.is( \":visible\" ) ) {\n\t\telement.css( \"opacity\", 0 ).show();\n\t\tanimateTo = 1;\n\t}\n\n\t// Anims - 1 opacity \"toggles\"\n\n\tvar Deferred = langx.Deferred;\n\tvar funcs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\n\tfor ( ; i < anims; i++ ) {\n\t\tfuncs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\n\t\tanimateTo = 1 - animateTo;\n\t}\n\n    funcs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/shake',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"shake\", function( options, done ) {\n\n\tvar i = 1,\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"left\",\n\t\tdistance = options.distance || 20,\n\t\ttimes = options.times || 3,\n\t\tanims = times * 2 + 1,\n\t\tspeed = Math.round( options.duration / anims ),\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tpositiveMotion = ( direction === \"up\" || direction === \"left\" ),\n\t\tanimation0 = {},\n\t\tanimation = {},\n\t\tanimation1 = {},\n\t\tanimation2 = {};\n\n\n\teffects.createPlaceholder( element );\n\n\tvar Deferred = langx.Deferred;\n\t\tstart = element.position()[ref],\n\t\tfuncs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\t// Animation\n\tanimation0[ ref ] = start;\n\tanimation[ ref ] = start + ( positiveMotion ? -1 : 1 ) * distance;\n\tanimation1[ ref ] = animation[ ref ] + ( positiveMotion ? 1 : -1 ) * distance * 2;\n\tanimation2[ ref ] = animation1[ ref ] + ( positiveMotion ? -1 : 1 ) * distance * 2;\n\n\t// Animate\n    funcs.push(doAnimate(element,animation, speed, options.easing ));\n\n\t// Shakes\n\tfor ( ; i < times; i++ ) {\n\t    funcs.push(doAnimate(element,animation1, speed, options.easing ));\n\t    funcs.push(doAnimate(element,animation2, speed, options.easing ));\n\t}\n\n    funcs.push(doAnimate(element,animation0, speed /2 , options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/slide',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"slide\", \"show\", function( options, done ) {\n\tvar startClip, startRef,\n\t\telement = $( this ),\n\t\tmap = {\n\t\t\tup: [ \"bottom\", \"top\" ],\n\t\t\tdown: [ \"top\", \"bottom\" ],\n\t\t\tleft: [ \"right\", \"left\" ],\n\t\t\tright: [ \"left\", \"right\" ]\n\t\t},\n\t\tmode = options.mode,\n\t\tdirection = options.direction || \"left\",\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tpositiveMotion = ( direction === \"up\" || direction === \"left\" ),\n\t\tdistance = options.distance ||\n\t\t\telement[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]( true ),\n\t\tanimation = {};\n\n\teffects.createPlaceholder( element );\n\n\tstartClip = element.cssClip();\n\tstartRef = element.position()[ ref ];\n\n\t// Define hide animation\n\tanimation[ ref ] = ( positiveMotion ? -1 : 1 ) * distance + startRef;\n\tanimation.clip = element.cssClip();\n\tanimation.clip[ map[ direction ][ 1 ] ] = animation.clip[ map[ direction ][ 0 ] ];\n\n\t// Reverse the animation if we're showing\n\tif ( mode === \"show\" ) {\n\t\telement.cssClip( animation.clip );\n\t\telement.css( ref, animation[ ref ] );\n\t\tanimation.clip = startClip;\n\t\tanimation[ ref ] = startRef;\n\t}\n\n\t// Actually animate\n\telement.animate( animation, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/transfer',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\n\tvar effect;\n\tif ( $.uiBackCompat !== false ) {\n\t\teffect = effects.define( \"transfer\", function( options, done ) {\n\t\t\t$(this).transfer( options, done );\n\t\t} );\n\t}\n\treturn effect;\n\n});\n\ndefine( 'skylark-utils-effects/main',[\r\n\t\"./effects\",\r\n\t\"./plugins/blind\",\r\n\t\"./plugins/bounce\",\r\n\t\"./plugins/clip\",\r\n\t\"./plugins/drop\",\r\n\t\"./plugins/explode\",\r\n\t\"./plugins/fade\",\r\n\t\"./plugins/fold\",\r\n\t\"./plugins/highlight\",\r\n\t\"./plugins/puff\",\r\n\t\"./plugins/pulsate\",\r\n\t\"./plugins/scale\",\r\n\t\"./plugins/shake\",\r\n\t\"./plugins/size\",\r\n\t\"./plugins/slide\",\r\n\t\"./plugins/transfer\"\r\n\r\n],function(effects){\r\n\treturn effects;\r\n});\ndefine('skylark-utils-effects', ['skylark-utils-effects/main'], function (main) { return main; });\n\n"]}