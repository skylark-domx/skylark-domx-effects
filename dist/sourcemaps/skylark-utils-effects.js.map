{"version":3,"sources":["skylark-utils-effects.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","isIE","exec","navigator","userAgent","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","disabled","elm","arguments","this","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","cls","isString","re","property","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","slice","clone","deep","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","children","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","offsetWidth","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","velm","createInputPseudo","type","elem","createButtonPseudo","ancestor","selector","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","create","keys","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","v","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","klassName","charAt","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","index","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","_normalizeArguments","effect","_default","standardAnimationOption","plugins","parseClip","str","outerWidth","outerHeight","clipRegex","values","parseFloat","dataSpace","dataSpaceStyle","dataSpaceAnimated","effects","mode","scaledDimensions","percent","direction","clipToBox","animation","clip","unshift","queueLength","count","splice","dequeue","saveStyle","restoreStyle","getBaseline","origin","createPlaceholder","placeholder","cssPosition","float","removePlaceholder","dataKey","cleanUp","setTransition","list","factor","unit","cssUnit","cleanup","done","modes","uiBackCompat","defaultMode","effectMethod","prefilter","normalizedMode","orig","cssClip","clipObj","transfer","targetFixed","fixTop","fixLeft","endPosition","startPosition","step","clipInit","start","baseEasings","p","pow","Sine","cos","PI","Circ","sqrt","Elastic","sin","Back","Bounce","pow2","bounce","easeIn","vertical","horizontal","doAnimate","d","Deferred","resolve","promise","upAnim","downAnim","refValue","distance","times","anims","ref","motion","funcs","reduce","curr","array","then","both","oppositeMotion","childComplete","pieces","rows","cells","animComplete","mx","my","ceil","horizFirst","animation1","animation2","backgroundColor","backgroundImage","color","baseline","temp","cProps","vProps","hProps","restore","childOriginal","childFrom","childTo","newOptions","fade","showhide","animateTo","positiveMotion","animation0","startClip","startRef","main"],"mappings":"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","file":"../skylark-utils-effects.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-effects/effects',[ \n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/fx\",\n\t\"skylark-utils/query\"\n],function(skylark,langx,fx,$) {\n\n\tvar dataSpace = \"ui-effects-\",\n\t\tdataSpaceStyle = \"ui-effects-style\",\n\t\tdataSpaceAnimated = \"ui-effects-animated\",\n\t\tplugins = {};\n\n\n\tvar effects = skylark.effects = function() {\n\n\t};\n\n\n\n\tlangx.mixin(effects,{\n\t\tdefine: function( name, mode, effect ) {\n\t\t\tif ( !effect ) {\n\t\t\t\teffect = mode;\n\t\t\t\tmode = \"effect\";\n\t\t\t}\n\n\t\t\tplugins[ name ] = effect;\n\t\t\tplugins[ name ].mode = mode;\n\n\t\t\treturn effect;\n\t\t},\n\n\t\tscaledDimensions: function( element, percent, direction ) {\n\t\t\tif ( percent === 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\theight: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\touterHeight: 0,\n\t\t\t\t\touterWidth: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar x = direction !== \"horizontal\" ? ( ( percent || 100 ) / 100 ) : 1,\n\t\t\t\ty = direction !== \"vertical\" ? ( ( percent || 100 ) / 100 ) : 1;\n\n\t\t\treturn {\n\t\t\t\theight: element.height() * y,\n\t\t\t\twidth: element.width() * x,\n\t\t\t\touterHeight: element.outerHeight() * y,\n\t\t\t\touterWidth: element.outerWidth() * x\n\t\t\t};\n\n\t\t},\n\n\t\tclipToBox: function( animation ) {\n\t\t\treturn {\n\t\t\t\twidth: animation.clip.right - animation.clip.left,\n\t\t\t\theight: animation.clip.bottom - animation.clip.top,\n\t\t\t\tleft: animation.clip.left,\n\t\t\t\ttop: animation.clip.top\n\t\t\t};\n\t\t},\n\n\t\t// Injects recently queued functions to be first in line (after \"inprogress\")\n\t\tunshift: function( element, queueLength, count ) {\n\t\t\tvar queue = element.queue();\n\n\t\t\tif ( queueLength > 1 ) {\n\t\t\t\tqueue.splice.apply( queue,\n\t\t\t\t\t[ 1, 0 ].concat( queue.splice( queueLength, count ) ) );\n\t\t\t}\n\t\t\telement.dequeue();\n\t\t},\n\n\t\tsaveStyle: function( element ) {\n\t\t\telement.data( dataSpaceStyle, element[ 0 ].style.cssText );\n\t\t},\n\n\t\trestoreStyle: function( element ) {\n\t\t\telement[ 0 ].style.cssText = element.data( dataSpaceStyle ) || \"\";\n\t\t\telement.removeData( dataSpaceStyle );\n\t\t},\n\n\t\tmode: function( element, mode ) {\n\t\t\tvar hidden = element.is( \":hidden\" );\n\n\t\t\tif ( mode === \"toggle\" ) {\n\t\t\t\tmode = hidden ? \"show\" : \"hide\";\n\t\t\t}\n\t\t\tif ( hidden ? mode === \"hide\" : mode === \"show\" ) {\n\t\t\t\tmode = \"none\";\n\t\t\t}\n\t\t\treturn mode;\n\t\t},\n\n\t\t// Translates a [top,left] array into a baseline value\n\t\tgetBaseline: function( origin, original ) {\n\t\t\tvar y, x;\n\n\t\t\tswitch ( origin[ 0 ] ) {\n\t\t\tcase \"top\":\n\t\t\t\ty = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"middle\":\n\t\t\t\ty = 0.5;\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\ty = 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ty = origin[ 0 ] / original.height;\n\t\t\t}\n\n\t\t\tswitch ( origin[ 1 ] ) {\n\t\t\tcase \"left\":\n\t\t\t\tx = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tx = 0.5;\n\t\t\t\tbreak;\n\t\t\tcase \"right\":\n\t\t\t\tx = 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tx = origin[ 1 ] / original.width;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\t// Creates a placeholder element so that the original element can be made absolute\n\t\tcreatePlaceholder: function( element ) {\n\t\t\tvar placeholder,\n\t\t\t\tcssPosition = element.css( \"position\" ),\n\t\t\t\tposition = element.position();\n\n\t\t\t// Lock in margins first to account for form elements, which\n\t\t\t// will change margin if you explicitly set height\n\t\t\t// see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380\n\t\t\t// Support: Safari\n\t\t\telement.css( {\n\t\t\t\tmarginTop: element.css( \"marginTop\" ),\n\t\t\t\tmarginBottom: element.css( \"marginBottom\" ),\n\t\t\t\tmarginLeft: element.css( \"marginLeft\" ),\n\t\t\t\tmarginRight: element.css( \"marginRight\" )\n\t\t\t} )\n\t\t\t.outerWidth( element.outerWidth() )\n\t\t\t.outerHeight( element.outerHeight() );\n\n\t\t\tif ( /^(static|relative)/.test( cssPosition ) ) {\n\t\t\t\tcssPosition = \"absolute\";\n\n\t\t\t\tplaceholder = $( \"<\" + element[ 0 ].nodeName + \">\" ).insertAfter( element ).css( {\n\n\t\t\t\t\t// Convert inline to inline block to account for inline elements\n\t\t\t\t\t// that turn to inline block based on content (like img)\n\t\t\t\t\tdisplay: /^(inline|ruby)/.test( element.css( \"display\" ) ) ?\n\t\t\t\t\t\t\"inline-block\" :\n\t\t\t\t\t\t\"block\",\n\t\t\t\t\tvisibility: \"hidden\",\n\n\t\t\t\t\t// Margins need to be set to account for margin collapse\n\t\t\t\t\tmarginTop: element.css( \"marginTop\" ),\n\t\t\t\t\tmarginBottom: element.css( \"marginBottom\" ),\n\t\t\t\t\tmarginLeft: element.css( \"marginLeft\" ),\n\t\t\t\t\tmarginRight: element.css( \"marginRight\" ),\n\t\t\t\t\t\"float\": element.css( \"float\" )\n\t\t\t\t} )\n\t\t\t\t.outerWidth( element.outerWidth() )\n\t\t\t\t.outerHeight( element.outerHeight() )\n\t\t\t\t.addClass( \"ui-effects-placeholder\" );\n\n\t\t\t\telement.data( dataSpace + \"placeholder\", placeholder );\n\t\t\t}\n\n\t\t\telement.css( {\n\t\t\t\tposition: cssPosition,\n\t\t\t\tleft: position.left,\n\t\t\t\ttop: position.top\n\t\t\t} );\n\n\t\t\treturn placeholder;\n\t\t},\n\n\t\tremovePlaceholder: function( element ) {\n\t\t\tvar dataKey = dataSpace + \"placeholder\",\n\t\t\t\t\tplaceholder = element.data( dataKey );\n\n\t\t\tif ( placeholder ) {\n\t\t\t\tplaceholder.remove();\n\t\t\t\telement.removeData( dataKey );\n\t\t\t}\n\t\t},\n\n\t\t// Removes a placeholder if it exists and restores\n\t\t// properties that were modified during placeholder creation\n\t\tcleanUp: function( element ) {\n\t\t\teffects.restoreStyle( element );\n\t\t\teffects.removePlaceholder( element );\n\t\t},\n\n\t\tsetTransition: function( element, list, factor, value ) {\n\t\t\tvalue = value || {};\n\t\t\tlangx.each( list, function( i, x ) {\n\t\t\t\tvar unit = element.cssUnit( x );\n\t\t\t\tif ( unit[ 0 ] > 0 ) {\n\t\t\t\t\tvalue[ x ] = unit[ 0 ] * factor + unit[ 1 ];\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn value;\n\t\t}\n\t});\n\n\t// Return an effect options object for the given parameters:\n\tfunction _normalizeArguments( effect, options, speed, callback ) {\n\n\t\t// Allow passing all options as the first parameter\n\t\tif ( langx.isPlainObject( effect ) ) {\n\t\t\toptions = effect;\n\t\t\teffect = effect.effect;\n\t\t}\n\n\t\t// Convert to an object\n\t\teffect = { effect: effect };\n\n\t\t// Catch (effect, null, ...)\n\t\tif ( options == null ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\t// Catch (effect, callback)\n\t\tif ( langx.isFunction( options ) ) {\n\t\t\tcallback = options;\n\t\t\tspeed = null;\n\t\t\toptions = {};\n\t\t}\n\n\t\t// Catch (effect, speed, ?)\n\t\tif ( typeof options === \"number\" || fx.speeds[ options ] ) {\n\t\t\tcallback = speed;\n\t\t\tspeed = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\t// Catch (effect, options, callback)\n\t\tif ( langx.isFunction( speed ) ) {\n\t\t\tcallback = speed;\n\t\t\tspeed = null;\n\t\t}\n\n\t\t// Add options to effect\n\t\tif ( options ) {\n\t\t\tlangx.mixin( effect, options );\n\t\t}\n\n\t\tspeed = speed || options.duration;\n\t\teffect.duration = fx.off ? 0 :\n\t\t\ttypeof speed === \"number\" ? speed :\n\t\t\tspeed in $.fx.speeds ? fx.speeds[ speed ] :\n\t\t\tfx.speeds._default;\n\n\t\teffect.complete = callback || options.complete;\n\n\t\treturn effect;\n\t}\n\n\tfunction standardAnimationOption( option ) {\n\n\t\t// Valid standard speeds (nothing, number, named speed)\n\t\tif ( !option || typeof option === \"number\" || fx.speeds[ option ] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Invalid strings - treat as \"normal\" speed\n\t\tif ( typeof option === \"string\" && !plugins[ option ] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Complete callback\n\t\tif ( langx.isFunction( option ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Options hash (but not naming an effect)\n\t\tif ( typeof option === \"object\" && !option.effect ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Didn't match any standard API\n\t\treturn false;\n\t}\n\n\tlangx.mixin($.fn,{\n\t\teffect: function( /* effect, options, speed, callback */ ) {\n\t\t\tvar args = _normalizeArguments.apply( this, arguments ),\n\t\t\t\teffectMethod = plugins[ args.effect ],\n\t\t\t\tdefaultMode = effectMethod.mode,\n\t\t\t\tqueue = args.queue,\n\t\t\t\tqueueName = queue || \"fx\",\n\t\t\t\tcomplete = args.complete,\n\t\t\t\tmode = args.mode,\n\t\t\t\tmodes = [],\n\t\t\t\tprefilter = function( next ) {\n\t\t\t\t\tvar el = $( this ),\n\t\t\t\t\t\tnormalizedMode = effects.mode( el, mode ) || defaultMode;\n\n\t\t\t\t\t// Sentinel for duck-punching the :animated pseudo-selector\n\t\t\t\t\tel.data( dataSpaceAnimated, true );\n\n\t\t\t\t\t// Save effect mode for later use,\n\t\t\t\t\t// we can't just call effects.mode again later,\n\t\t\t\t\t// as the .show() below destroys the initial state\n\t\t\t\t\tmodes.push( normalizedMode );\n\n\t\t\t\t\t// See $.uiBackCompat inside of run() for removal of defaultMode in 1.13\n\t\t\t\t\tif ( defaultMode && ( normalizedMode === \"show\" ||\n\t\t\t\t\t\t\t( normalizedMode === defaultMode && normalizedMode === \"hide\" ) ) ) {\n\t\t\t\t\t\tel.show();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !defaultMode || normalizedMode !== \"none\" ) {\n\t\t\t\t\t\teffects.saveStyle( el );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( langx.isFunction( next ) ) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tif ( fx.off || !effectMethod ) {\n\n\t\t\t\t// Delegate to the original method (e.g., .show()) if possible\n\t\t\t\tif ( mode ) {\n\t\t\t\t\treturn this[ mode ]( args.duration, complete );\n\t\t\t\t} else {\n\t\t\t\t\treturn this.each( function() {\n\t\t\t\t\t\tif ( complete ) {\n\t\t\t\t\t\t\tcomplete.call( this );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction run( next ) {\n\t\t\t\tvar elem = $( this );\n\n\t\t\t\tfunction cleanup() {\n\t\t\t\t\telem.removeData( dataSpaceAnimated );\n\n\t\t\t\t\teffects.cleanUp( elem );\n\n\t\t\t\t\tif ( args.mode === \"hide\" ) {\n\t\t\t\t\t\telem.hide();\n\t\t\t\t\t}\n\n\t\t\t\t\tdone();\n\t\t\t\t}\n\n\t\t\t\tfunction done() {\n\t\t\t\t\tif ( langx.isFunction( complete ) ) {\n\t\t\t\t\t\tcomplete.call( elem[ 0 ] );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( langx.isFunction( next ) ) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mode option on a per element basis,\n\t\t\t\t// as toggle can be either show or hide depending on element state\n\t\t\t\targs.mode = modes.shift();\n\n\t\t\t\tif ( $.uiBackCompat !== false && !defaultMode ) {\n\t\t\t\t\tif ( elem.is( \":hidden\" ) ? mode === \"hide\" : mode === \"show\" ) {\n\n\t\t\t\t\t\t// Call the core method to track \"olddisplay\" properly\n\t\t\t\t\t\telem[ mode ]();\n\t\t\t\t\t\tdone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\teffectMethod.call( elem[ 0 ], args, done );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( args.mode === \"none\" ) {\n\n\t\t\t\t\t\t// Call the core method to track \"olddisplay\" properly\n\t\t\t\t\t\telem[ mode ]();\n\t\t\t\t\t\tdone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\teffectMethod.call( elem[ 0 ], args, cleanup );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run prefilter on all elements first to ensure that\n\t\t\t// any showing or hiding happens before placeholder creation,\n\t\t\t// which ensures that any layout changes are correctly captured.\n\t\t\t//return queue === false ?\n\t\t\t//\tthis.each( prefilter ).each( run ) :\n\t\t\t//\tthis.queue( queueName, prefilter ).queue( queueName, run );\n\n\t\t\treturn this.each( prefilter ).each( run );\t\n\t\t},\n\n\t\tshow: ( function( orig ) {\n\t\t\treturn function( option ) {\n\t\t\t\tif ( standardAnimationOption( option ) ) {\n\t\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t\t} else {\n\t\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\n\t\t\t\t\targs.mode = \"show\";\n\t\t\t\t\treturn this.effect.call( this, args );\n\t\t\t\t}\n\t\t\t};\n\t\t} )( $.fn.show ),\n\n\t\thide: ( function( orig ) {\n\t\t\treturn function( option ) {\n\t\t\t\tif ( standardAnimationOption( option ) ) {\n\t\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t\t} else {\n\t\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\n\t\t\t\t\targs.mode = \"hide\";\n\t\t\t\t\treturn this.effect.call( this, args );\n\t\t\t\t}\n\t\t\t};\n\t\t} )( $.fn.hide ),\n\n\t\ttoggle: ( function( orig ) {\n\t\t\treturn function( option ) {\n\t\t\t\tif ( standardAnimationOption( option ) || typeof option === \"boolean\" ) {\n\t\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t\t} else {\n\t\t\t\t\tvar args = _normalizeArguments.apply( this, arguments );\n\t\t\t\t\targs.mode = \"toggle\";\n\t\t\t\t\treturn this.effect.call( this, args );\n\t\t\t\t}\n\t\t\t};\n\t\t} )( $.fn.toggle ),\n\n\t\tcssUnit: function( key ) {\n\t\t\tvar style = this.css( key ),\n\t\t\t\tval = [];\n\n\t\t\tlangx.each( [ \"em\", \"px\", \"%\", \"pt\" ], function( i, unit ) {\n\t\t\t\tif ( style.indexOf( unit ) > 0 ) {\n\t\t\t\t\tval = [ parseFloat( style ), unit ];\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\treturn val;\n\t\t},\n\n\t\tcssClip: function( clipObj ) {\n\t\t\tif ( clipObj ) {\n\t\t\t\treturn this.css( \"clip\", \"rect(\" + clipObj.top + \"px \" + clipObj.right + \"px \" +\n\t\t\t\t\tclipObj.bottom + \"px \" + clipObj.left + \"px)\" );\n\t\t\t}\n\t\t\treturn parseClip( this.css( \"clip\" ), this );\n\t\t},\n\n\t\ttransfer: function( options, done ) {\n\t\t\tvar element = $( this ),\n\t\t\t\ttarget = $( options.to ),\n\t\t\t\ttargetFixed = target.css( \"position\" ) === \"fixed\",\n\t\t\t\tbody = $( \"body\" ),\n\t\t\t\tfixTop = targetFixed ? body.scrollTop() : 0,\n\t\t\t\tfixLeft = targetFixed ? body.scrollLeft() : 0,\n\t\t\t\tendPosition = target.offset(),\n\t\t\t\tanimation = {\n\t\t\t\t\ttop: endPosition.top - fixTop,\n\t\t\t\t\tleft: endPosition.left - fixLeft,\n\t\t\t\t\theight: target.innerHeight(),\n\t\t\t\t\twidth: target.innerWidth()\n\t\t\t\t},\n\t\t\t\tstartPosition = element.offset(),\n\t\t\t\ttransfer = $( \"<div class='ui-effects-transfer'></div>\" )\n\t\t\t\t\t.appendTo( \"body\" )\n\t\t\t\t\t.addClass( options.className )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\ttop: startPosition.top - fixTop,\n\t\t\t\t\t\tleft: startPosition.left - fixLeft,\n\t\t\t\t\t\theight: element.innerHeight(),\n\t\t\t\t\t\twidth: element.innerWidth(),\n\t\t\t\t\t\tposition: targetFixed ? \"fixed\" : \"absolute\"\n\t\t\t\t\t} )\n\t\t\t\t\t.animate( animation, options.duration, options.easing, function() {\n\t\t\t\t\t\ttransfer.remove();\n\t\t\t\t\t\tif ( langx.isFunction( done ) ) {\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t}\n\t});\n\n\tfunction parseClip( str, element ) {\n\t\t\tvar outerWidth = element.outerWidth(),\n\t\t\t\touterHeight = element.outerHeight(),\n\t\t\t\tclipRegex = /^rect\\((-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto)\\)$/,\n\t\t\t\tvalues = clipRegex.exec( str ) || [ \"\", 0, outerWidth, outerHeight, 0 ];\n\n\t\t\treturn {\n\t\t\t\ttop: parseFloat( values[ 1 ] ) || 0,\n\t\t\t\tright: values[ 2 ] === \"auto\" ? outerWidth : parseFloat( values[ 2 ] ),\n\t\t\t\tbottom: values[ 3 ] === \"auto\" ? outerHeight : parseFloat( values[ 3 ] ),\n\t\t\t\tleft: parseFloat( values[ 4 ] ) || 0\n\t\t\t};\n\t}\n\n\tfx.step = fx.step || {};\n\n\tfx.step.clip = function( fx ) {\n\t\tif ( !fx.clipInit ) {\n\t\t\tfx.start = $( fx.elem ).cssClip();\n\t\t\tif ( typeof fx.end === \"string\" ) {\n\t\t\t\tfx.end = parseClip( fx.end, fx.elem );\n\t\t\t}\n\t\t\tfx.clipInit = true;\n\t\t}\n\n\t\t$( fx.elem ).cssClip( {\n\t\t\ttop: fx.pos * ( fx.end.top - fx.start.top ) + fx.start.top,\n\t\t\tright: fx.pos * ( fx.end.right - fx.start.right ) + fx.start.right,\n\t\t\tbottom: fx.pos * ( fx.end.bottom - fx.start.bottom ) + fx.start.bottom,\n\t\t\tleft: fx.pos * ( fx.end.left - fx.start.left ) + fx.start.left\n\t\t} );\n\t};\n\n\n\t/******************************************************************************/\n\t/*********************************** EASING ***********************************/\n\t/******************************************************************************/\n\n\t// Based on easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n\tvar baseEasings = {};\n\n\tlangx.each( [ \"Quad\", \"Cubic\", \"Quart\", \"Quint\", \"Expo\" ], function( i, name ) {\n\t\tbaseEasings[ name ] = function( p ) {\n\t\t\treturn Math.pow( p, i + 2 );\n\t\t};\n\t} );\n\n\tlangx.mixin( baseEasings, {\n\t\tSine: function( p ) {\n\t\t\treturn 1 - Math.cos( p * Math.PI / 2 );\n\t\t},\n\t\tCirc: function( p ) {\n\t\t\treturn 1 - Math.sqrt( 1 - p * p );\n\t\t},\n\t\tElastic: function( p ) {\n\t\t\treturn p === 0 || p === 1 ? p :\n\t\t\t\t-Math.pow( 2, 8 * ( p - 1 ) ) * Math.sin( ( ( p - 1 ) * 80 - 7.5 ) * Math.PI / 15 );\n\t\t},\n\t\tBack: function( p ) {\n\t\t\treturn p * p * ( 3 * p - 2 );\n\t\t},\n\t\tBounce: function( p ) {\n\t\t\tvar pow2,\n\t\t\t\tbounce = 4;\n\n\t\t\twhile ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}\n\t\t\treturn 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );\n\t\t}\n\t} );\n\n\tfx.easing = fx.easing || {};\n\n\tlangx.each( baseEasings, function( name, easeIn ) {\n\t\tfx.easing[ \"easeIn\" + name ] = easeIn;\n\t\tfx.easing[ \"easeOut\" + name ] = function( p ) {\n\t\t\treturn 1 - easeIn( 1 - p );\n\t\t};\n\t\tfx.easing[ \"easeInOut\" + name ] = function( p ) {\n\t\t\treturn p < 0.5 ?\n\t\t\t\teaseIn( p * 2 ) / 2 :\n\t\t\t\t1 - easeIn( p * -2 + 2 ) / 2;\n\t\t};\n\t} );\n\n\n\treturn effects;\n\n});\n\ndefine( 'skylark-utils-effects/plugins/blind',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"blind\", \"hide\", function( options, done ) {\n\tvar map = {\n\t\t\tup: [ \"bottom\", \"top\" ],\n\t\t\tvertical: [ \"bottom\", \"top\" ],\n\t\t\tdown: [ \"top\", \"bottom\" ],\n\t\t\tleft: [ \"right\", \"left\" ],\n\t\t\thorizontal: [ \"right\", \"left\" ],\n\t\t\tright: [ \"left\", \"right\" ]\n\t\t},\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"up\",\n\t\tstart = element.cssClip(),\n\t\tanimate = { clip: langx.mixin( {}, start ) },\n\t\tplaceholder = effects.createPlaceholder( element );\n\n\tanimate.clip[ map[ direction ][ 0 ] ] = animate.clip[ map[ direction ][ 1 ] ];\n\n\tif ( options.mode === \"show\" ) {\n\t\telement.cssClip( animate.clip );\n\t\tif ( placeholder ) {\n\t\t\tplaceholder.css( effects.clipToBox( animate ) );\n\t\t}\n\n\t\tanimate.clip = start;\n\t}\n\n\tif ( placeholder ) {\n\t\tplaceholder.animate( effects.clipToBox( animate ), options.duration, options.easing );\n\t}\n\n\telement.animate( animate, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/bounce',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"bounce\", function( options, done ) {\n\tvar upAnim, downAnim, refValue,\n\t\telement = $( this ),\n\n\t\t// Defaults:\n\t\tmode = options.mode,\n\t\thide = mode === \"hide\",\n\t\tshow = mode === \"show\",\n\t\tdirection = options.direction || \"up\",\n\t\tstart,\n\t\tdistance = options.distance,\n\t\ttimes = options.times || 5,\n\n\t\t// Number of internal animations\n\t\tanims = times * 2 + ( show || hide ? 1 : 0 ),\n\t\tspeed = options.duration / anims,\n\t\teasing = options.easing,\n\n\t\t// Utility:\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tmotion = ( direction === \"up\" || direction === \"left\" ),\n\t\ti = 0;\n\n\teffects.createPlaceholder( element );\n\n\tvar Deferred = langx.Deferred;\n\tvar funcs = [];\n\n\trefValue = element.css( ref );\n\n\t// Default distance for the BIGGEST bounce is the outer Distance / 3\n\tif ( !distance ) {\n\t\tdistance = element[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]() / 3;\n\t}\n\tstart = element.position()[ref];\n\n\tif ( show ) {\n\t\tdownAnim = { opacity: 1 };\n\t\tdownAnim[ ref ] = refValue;\n\n\t\t// If we are showing, force opacity 0 and set the initial position\n\t\t// then do the \"first\" animation\n\t\telement\n\t\t\t.css( \"opacity\", 0 )\n\t\t\t.css( ref, start + (motion ? -distance * 2 : distance * 2 ));\n\n\t\tfuncs.push(doAnimate(element,downAnim, speed, easing));\n\t}\n\n\t// Start at the smallest distance if we are hiding\n\tif ( hide ) {\n\t\tdistance = distance / Math.pow( 2, times - 1 );\n\t}\n\n\tdownAnim = {};\n\tdownAnim[ ref ] = refValue;\n\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, easing ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\t// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here\n\tfor ( ; i < times; i++ ) {\n\t\tupAnim = {};\n\t\tupAnim[ ref ] = start + ( motion ? -distance : distance) ;\n\n\t\tfuncs.push(doAnimate(element,upAnim, speed, easing));\n\n\t\tfuncs.push(doAnimate(element,downAnim, speed, easing));\n\n\t\tdistance = hide ? distance * 2 : distance / 2;\n\t}\n\n\t// Last Bounce when Hiding\n\tif ( hide ) {\n\t\tupAnim = { opacity: 0 };\n\t\tupAnim[ ref ] = start + ( motion ? -1 * distance : distance) ;\n\n\t\tfuncs.push(doAnimate(element,upAnim, speed, easing ));\n\t}\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/clip',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"clip\", \"hide\", function( options, done ) {\n\tvar start,\n\t\tanimate = {},\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"vertical\",\n\t\tboth = direction === \"both\",\n\t\thorizontal = both || direction === \"horizontal\",\n\t\tvertical = both || direction === \"vertical\";\n\n\tstart = element.cssClip();\n\tanimate.clip = {\n\t\ttop: vertical ? ( start.bottom - start.top ) / 2 : start.top,\n\t\tright: horizontal ? ( start.right - start.left ) / 2 : start.right,\n\t\tbottom: vertical ? ( start.bottom - start.top ) / 2 : start.bottom,\n\t\tleft: horizontal ? ( start.right - start.left ) / 2 : start.left\n\t};\n\n\teffects.createPlaceholder( element );\n\n\tif ( options.mode === \"show\" ) {\n\t\telement.cssClip( animate.clip );\n\t\tanimate.clip = start;\n\t}\n\n\telement.animate( animate, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/drop',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"drop\", \"hide\", function( options, done ) {\n\n\tvar distance,\n\t\telement = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\tdirection = options.direction || \"left\",\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tmotion = ( direction === \"up\" || direction === \"left\" ) ? -1 : 1,\n\t\toppositeMotion =  motion * -1,\n\t\tanimation = {\n\t\t\topacity: 0\n\t\t},\n\t\tstart = element.position()[ref];\n\n\teffects.createPlaceholder( element );\n\n\tdistance = options.distance ||\n\t\telement[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]( true ) / 2;\n\n\tanimation[ ref ] = start + motion * distance;\n\n\tif ( show ) {\n\t\telement.css( animation );\n\n\t\tanimation[ ref ] = start + oppositeMotion * distance;\n\t\tanimation.opacity = 1;\n\t}\n\n\t// Animate\n\telement.animate( animation, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/explode',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"explode\", \"hide\", function( options, done ) {\n\n\tvar i, j, left, top, mx, my,\n\t\trows = options.pieces ? Math.round( Math.sqrt( options.pieces ) ) : 3,\n\t\tcells = rows,\n\t\telement = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\n\t\t// Show and then visibility:hidden the element before calculating offset\n\t\toffset = element.show().css( \"visibility\", \"hidden\" ).offset(),\n\n\t\t// Width and height of a piece\n\t\twidth = Math.ceil( element.outerWidth() / cells ),\n\t\theight = Math.ceil( element.outerHeight() / rows ),\n\t\tpieces = [];\n\n\t// Children animate complete:\n\tfunction childComplete() {\n\t\tpieces.push( this );\n\t\tif ( pieces.length === rows * cells ) {\n\t\t\tanimComplete();\n\t\t}\n\t}\n\n\t// Clone the element for each row and cell.\n\tfor ( i = 0; i < rows; i++ ) { // ===>\n\t\ttop = offset.top + i * height;\n\t\tmy = i - ( rows - 1 ) / 2;\n\n\t\tfor ( j = 0; j < cells; j++ ) { // |||\n\t\t\tleft = offset.left + j * width;\n\t\t\tmx = j - ( cells - 1 ) / 2;\n\n\t\t\t// Create a clone of the now hidden main element that will be absolute positioned\n\t\t\t// within a wrapper div off the -left and -top equal to size of our pieces\n\t\t\telement\n\t\t\t\t.clone()\n\t\t\t\t.appendTo( \"body\" )\n\t\t\t\t.wrap( \"<div></div>\" )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tvisibility: \"visible\",\n\t\t\t\t\tleft: -j * width,\n\t\t\t\t\ttop: -i * height\n\t\t\t\t} )\n\n\t\t\t\t// Select the wrapper - make it overflow: hidden and absolute positioned based on\n\t\t\t\t// where the original was located +left and +top equal to the size of pieces\n\t\t\t\t.parent()\n\t\t\t\t\t.addClass( \"ui-effects-explode\" )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tleft: left + ( show ? mx * width : 0 ),\n\t\t\t\t\t\ttop: top + ( show ? my * height : 0 ),\n\t\t\t\t\t\topacity: show ? 0 : 1\n\t\t\t\t\t} )\n\t\t\t\t\t.animate( {\n\t\t\t\t\t\tleft: left + ( show ? 0 : mx * width ),\n\t\t\t\t\t\ttop: top + ( show ? 0 : my * height ),\n\t\t\t\t\t\topacity: show ? 1 : 0\n\t\t\t\t\t}, options.duration || 500, options.easing, childComplete );\n\t\t}\n\t}\n\n\tfunction animComplete() {\n\t\telement.css( {\n\t\t\tvisibility: \"visible\"\n\t\t} );\n\t\t$( pieces ).remove();\n\t\tdone();\n\t}\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/fade',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\n\treturn effects.define( \"fade\", \"toggle\", function( options, done ) {\n\t\tvar show = options.mode === \"show\";\n\n\t\t$( this )\n\t\t\t.css( \"opacity\", show ? 0 : 1 )\n\t\t\t.animate( {\n\t\t\t\topacity: show ? 1 : 0\n\t\t\t}, {\n\t\t\t\tqueue: false,\n\t\t\t\tduration: options.duration,\n\t\t\t\teasing: options.easing,\n\t\t\t\tcomplete: done\n\t\t\t} );\n\t});\n\n});\n\ndefine( 'skylark-utils-effects/plugins/fold',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"fold\", \"hide\", function( options, done ) {\n\n\t// Create element\n\tvar element = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\thide = mode === \"hide\",\n\t\tsize = options.size || 15,\n\t\tpercent = /([0-9]+)%/.exec( size ),\n\t\thorizFirst = !!options.horizFirst,\n\t\tref = horizFirst ? [ \"right\", \"bottom\" ] : [ \"bottom\", \"right\" ],\n\t\tduration = options.duration / 2,\n\n\t\tplaceholder = effects.createPlaceholder( element ),\n\n\t\tstart = element.cssClip(),\n\t\tanimation1 = { clip: langx.mixin( {}, start ) },\n\t\tanimation2 = { clip: langx.mixin( {}, start ) },\n\n\t\tdistance = [ start[ ref[ 0 ] ], start[ ref[ 1 ] ] ];\n\n\n\tif ( percent ) {\n\t\tsize = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];\n\t}\n\tanimation1.clip[ ref[ 0 ] ] = size;\n\tanimation2.clip[ ref[ 0 ] ] = size;\n\tanimation2.clip[ ref[ 1 ] ] = 0;\n\n\tif ( show ) {\n\t\telement.cssClip( animation2.clip );\n\t\tif ( placeholder ) {\n\t\t\tplaceholder.css( effects.clipToBox( animation2 ) );\n\t\t}\n\n\t\tanimation2.clip = start;\n\t}\n\n\t// Animate\n\tvar Deferred = langx.Deferred;\n\tvar funcs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\tif ( placeholder ) {\n\t\tfuncs.push(doAnimate(placeholder,effects.clipToBox( animation1 ), duration, options.easing ));\n\t\tfuncs.push(doAnimate(placeholder,effects.clipToBox( animation2 ), duration, options.easing ));\n\t}\n\n\tfuncs.push(doAnimate(element,animation1, duration, options.easing ));\n\tfuncs.push(doAnimate(element,animation2, duration, options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\t\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/highlight',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"highlight\", \"show\", function( options, done ) {\n\tvar element = $( this ),\n\t\tanimation = {\n\t\t\tbackgroundColor: element.css( \"backgroundColor\" )\n\t\t};\n\n\tif ( options.mode === \"hide\" ) {\n\t\tanimation.opacity = 0;\n\t}\n\n\teffects.saveStyle( element );\n\n\telement\n\t\t.css( {\n\t\t\tbackgroundImage: \"none\",\n\t\t\tbackgroundColor: options.color || \"#ffff99\"\n\t\t} )\n\t\t.animate( animation, {\n\t\t\tqueue: false,\n\t\t\tduration: options.duration,\n\t\t\teasing: options.easing,\n\t\t\tcomplete: done\n\t\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/size',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"size\", function( options, done ) {\n\n\t// Create element\n\tvar baseline, factor, temp,\n\t\telement = $( this ),\n\n\t\t// Copy for children\n\t\tcProps = [ \"fontSize\" ],\n\t\tvProps = [ \"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\" ],\n\t\thProps = [ \"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\" ],\n\n\t\t// Set options\n\t\tmode = options.mode,\n\t\trestore = mode !== \"effect\",\n\t\tscale = options.scale || \"both\",\n\t\torigin = options.origin || [ \"middle\", \"center\" ],\n\t\tposition = element.css( \"position\" ),\n\t\tpos = element.position(),\n\t\toriginal = effects.scaledDimensions( element ),\n\t\tfrom = options.from || original,\n\t\tto = options.to || effects.scaledDimensions( element, 0 );\n\n\teffects.createPlaceholder( element );\n\n\tif ( mode === \"show\" ) {\n\t\ttemp = from;\n\t\tfrom = to;\n\t\tto = temp;\n\t}\n\n\t// Set scaling factor\n\tfactor = {\n\t\tfrom: {\n\t\t\ty: from.height / original.height,\n\t\t\tx: from.width / original.width\n\t\t},\n\t\tto: {\n\t\t\ty: to.height / original.height,\n\t\t\tx: to.width / original.width\n\t\t}\n\t};\n\n\t// Scale the css box\n\tif ( scale === \"box\" || scale === \"both\" ) {\n\n\t\t// Vertical props scaling\n\t\tif ( factor.from.y !== factor.to.y ) {\n\t\t\tfrom = effects.setTransition( element, vProps, factor.from.y, from );\n\t\t\tto = effects.setTransition( element, vProps, factor.to.y, to );\n\t\t}\n\n\t\t// Horizontal props scaling\n\t\tif ( factor.from.x !== factor.to.x ) {\n\t\t\tfrom = effects.setTransition( element, hProps, factor.from.x, from );\n\t\t\tto = effects.setTransition( element, hProps, factor.to.x, to );\n\t\t}\n\t}\n\n\t// Scale the content\n\tif ( scale === \"content\" || scale === \"both\" ) {\n\n\t\t// Vertical props scaling\n\t\tif ( factor.from.y !== factor.to.y ) {\n\t\t\tfrom = effects.setTransition( element, cProps, factor.from.y, from );\n\t\t\tto = effects.setTransition( element, cProps, factor.to.y, to );\n\t\t}\n\t}\n\n\t// Adjust the position properties based on the provided origin points\n\tif ( origin ) {\n\t\tbaseline = effects.getBaseline( origin, original );\n\t\tfrom.top = ( original.outerHeight - from.outerHeight ) * baseline.y + pos.top;\n\t\tfrom.left = ( original.outerWidth - from.outerWidth ) * baseline.x + pos.left;\n\t\tto.top = ( original.outerHeight - to.outerHeight ) * baseline.y + pos.top;\n\t\tto.left = ( original.outerWidth - to.outerWidth ) * baseline.x + pos.left;\n\t}\n\telement.css( from );\n\n\t// Animate the children if desired\n\tif ( scale === \"content\" || scale === \"both\" ) {\n\n\t\tvProps = vProps.concat( [ \"marginTop\", \"marginBottom\" ] ).concat( cProps );\n\t\thProps = hProps.concat( [ \"marginLeft\", \"marginRight\" ] );\n\n\t\t// Only animate children with width attributes specified\n\t\t// TODO: is this right? should we include anything with css width specified as well\n\t\telement.find( \"*[width]\" ).each( function() {\n\t\t\tvar child = $( this ),\n\t\t\t\tchildOriginal = effects.scaledDimensions( child ),\n\t\t\t\tchildFrom = {\n\t\t\t\t\theight: childOriginal.height * factor.from.y,\n\t\t\t\t\twidth: childOriginal.width * factor.from.x,\n\t\t\t\t\touterHeight: childOriginal.outerHeight * factor.from.y,\n\t\t\t\t\touterWidth: childOriginal.outerWidth * factor.from.x\n\t\t\t\t},\n\t\t\t\tchildTo = {\n\t\t\t\t\theight: childOriginal.height * factor.to.y,\n\t\t\t\t\twidth: childOriginal.width * factor.to.x,\n\t\t\t\t\touterHeight: childOriginal.height * factor.to.y,\n\t\t\t\t\touterWidth: childOriginal.width * factor.to.x\n\t\t\t\t};\n\n\t\t\t// Vertical props scaling\n\t\t\tif ( factor.from.y !== factor.to.y ) {\n\t\t\t\tchildFrom = effects.setTransition( child, vProps, factor.from.y, childFrom );\n\t\t\t\tchildTo = effects.setTransition( child, vProps, factor.to.y, childTo );\n\t\t\t}\n\n\t\t\t// Horizontal props scaling\n\t\t\tif ( factor.from.x !== factor.to.x ) {\n\t\t\t\tchildFrom = effects.setTransition( child, hProps, factor.from.x, childFrom );\n\t\t\t\tchildTo = effects.setTransition( child, hProps, factor.to.x, childTo );\n\t\t\t}\n\n\t\t\tif ( restore ) {\n\t\t\t\teffects.saveStyle( child );\n\t\t\t}\n\n\t\t\t// Animate children\n\t\t\tchild.css( childFrom );\n\t\t\tchild.animate( childTo, options.duration, options.easing, function() {\n\n\t\t\t\t// Restore children\n\t\t\t\tif ( restore ) {\n\t\t\t\t\teffects.restoreStyle( child );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Animate\n\telement.animate( to, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: function() {\n\n\t\t\tvar offset = element.offset();\n\n\t\t\tif ( to.opacity === 0 ) {\n\t\t\t\telement.css( \"opacity\", from.opacity );\n\t\t\t}\n\n\t\t\tif ( !restore ) {\n\t\t\t\telement\n\t\t\t\t\t.css( \"position\", position === \"static\" ? \"relative\" : position )\n\t\t\t\t\t.offset( offset );\n\n\t\t\t\t// Need to save style here so that automatic style restoration\n\t\t\t\t// doesn't restore to the original styles from before the animation.\n\t\t\t\teffects.saveStyle( element );\n\t\t\t}\n\n\t\t\tdone();\n\t\t}\n\t} );\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/scale',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\",\n\t\"./size\"\n], function(langx,$,effects,size) {\n\nreturn effects.define( \"scale\", function( options, done ) {\n\n\t// Create element\n\tvar el = $( this ),\n\t\tmode = options.mode,\n\t\tpercent = parseInt( options.percent, 10 ) ||\n\t\t\t( parseInt( options.percent, 10 ) === 0 ? 0 : ( mode !== \"effect\" ? 0 : 100 ) ),\n\n\t\tnewOptions = langx.mixin( {\n\t\t\tfrom: effects.scaledDimensions( el ),\n\t\t\tto: effects.scaledDimensions( el, percent, options.direction || \"both\" ),\n\t\t\torigin: options.origin || [ \"middle\", \"center\" ]\n\t\t}, options );\n\n\t// Fade option to support puff\n\tif ( options.fade ) {\n\t\tnewOptions.from.opacity = 1;\n\t\tnewOptions.to.opacity = 0;\n\t}\n\n\tsize.call( this, newOptions, done );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/puff',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\",\n\t\"./scale\"\n], function(langx,$,effects,scale) {\n\n\treturn effects.define( \"puff\", \"hide\", function( options, done ) {\n\t\tvar newOptions = langx.mixin( {}, options, {\n\t\t\tfade: true,\n\t\t\tpercent: parseInt( options.percent, 10 ) || 150\n\t\t} );\n\n\t\tscale.call( this, newOptions, done );\n\t});\n\n});\n\ndefine( 'skylark-utils-effects/plugins/pulsate',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"pulsate\", \"show\", function( options, done ) {\n\tvar element = $( this ),\n\t\tmode = options.mode,\n\t\tshow = mode === \"show\",\n\t\thide = mode === \"hide\",\n\t\tshowhide = show || hide,\n\n\t\t// Showing or hiding leaves off the \"last\" animation\n\t\tanims = ( ( options.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),\n\t\tduration = options.duration / anims,\n\t\tanimateTo = 0,\n\t\ti = 1;\n\n\tif ( show || !element.is( \":visible\" ) ) {\n\t\telement.css( \"opacity\", 0 ).show();\n\t\tanimateTo = 1;\n\t}\n\n\t// Anims - 1 opacity \"toggles\"\n\n\tvar Deferred = langx.Deferred;\n\tvar funcs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\n\tfor ( ; i < anims; i++ ) {\n\t\tfuncs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\n\t\tanimateTo = 1 - animateTo;\n\t}\n\n    funcs.push(doAnimate(element,{ opacity: animateTo }, duration, options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/shake',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"shake\", function( options, done ) {\n\n\tvar i = 1,\n\t\telement = $( this ),\n\t\tdirection = options.direction || \"left\",\n\t\tdistance = options.distance || 20,\n\t\ttimes = options.times || 3,\n\t\tanims = times * 2 + 1,\n\t\tspeed = Math.round( options.duration / anims ),\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tpositiveMotion = ( direction === \"up\" || direction === \"left\" ),\n\t\tanimation0 = {},\n\t\tanimation = {},\n\t\tanimation1 = {},\n\t\tanimation2 = {};\n\n\n\teffects.createPlaceholder( element );\n\n\tvar Deferred = langx.Deferred;\n\t\tstart = element.position()[ref],\n\t\tfuncs = [];\n\n\tfunction doAnimate(element,properties, duration, ease) {\n\t\treturn function() {\n\t\t\tvar d = new Deferred();\n\n\t\t\telement.animate( properties, duration, ease ,function(){\n\t\t\t\td.resolve();\n\t\t\t});\n\t\t\treturn d.promise;\n\n\t\t}\n\t}\n\n\t// Animation\n\tanimation0[ ref ] = start;\n\tanimation[ ref ] = start + ( positiveMotion ? -1 : 1 ) * distance;\n\tanimation1[ ref ] = animation[ ref ] + ( positiveMotion ? 1 : -1 ) * distance * 2;\n\tanimation2[ ref ] = animation1[ ref ] + ( positiveMotion ? -1 : 1 ) * distance * 2;\n\n\t// Animate\n    funcs.push(doAnimate(element,animation, speed, options.easing ));\n\n\t// Shakes\n\tfor ( ; i < times; i++ ) {\n\t    funcs.push(doAnimate(element,animation1, speed, options.easing ));\n\t    funcs.push(doAnimate(element,animation2, speed, options.easing ));\n\t}\n\n    funcs.push(doAnimate(element,animation0, speed /2 , options.easing ));\n\n\tfuncs.push(done);\n\tfuncs.reduce(function(prev, curr, index, array) {\n  \t\treturn prev.then(curr);\n\t}, Deferred.resolve());\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/slide',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\nreturn effects.define( \"slide\", \"show\", function( options, done ) {\n\tvar startClip, startRef,\n\t\telement = $( this ),\n\t\tmap = {\n\t\t\tup: [ \"bottom\", \"top\" ],\n\t\t\tdown: [ \"top\", \"bottom\" ],\n\t\t\tleft: [ \"right\", \"left\" ],\n\t\t\tright: [ \"left\", \"right\" ]\n\t\t},\n\t\tmode = options.mode,\n\t\tdirection = options.direction || \"left\",\n\t\tref = ( direction === \"up\" || direction === \"down\" ) ? \"top\" : \"left\",\n\t\tpositiveMotion = ( direction === \"up\" || direction === \"left\" ),\n\t\tdistance = options.distance ||\n\t\t\telement[ ref === \"top\" ? \"outerHeight\" : \"outerWidth\" ]( true ),\n\t\tanimation = {};\n\n\teffects.createPlaceholder( element );\n\n\tstartClip = element.cssClip();\n\tstartRef = element.position()[ ref ];\n\n\t// Define hide animation\n\tanimation[ ref ] = ( positiveMotion ? -1 : 1 ) * distance + startRef;\n\tanimation.clip = element.cssClip();\n\tanimation.clip[ map[ direction ][ 1 ] ] = animation.clip[ map[ direction ][ 0 ] ];\n\n\t// Reverse the animation if we're showing\n\tif ( mode === \"show\" ) {\n\t\telement.cssClip( animation.clip );\n\t\telement.css( ref, animation[ ref ] );\n\t\tanimation.clip = startClip;\n\t\tanimation[ ref ] = startRef;\n\t}\n\n\t// Actually animate\n\telement.animate( animation, {\n\t\tqueue: false,\n\t\tduration: options.duration,\n\t\teasing: options.easing,\n\t\tcomplete: done\n\t} );\n} );\n\n});\n\ndefine( 'skylark-utils-effects/plugins/transfer',[\n\t\"skylark-langx/langx\",\n\t\"skylark-utils/query\",\n\t\"../effects\"\n], function(langx,$,effects) {\n\tvar effect;\n\tif ( $.uiBackCompat !== false ) {\n\t\teffect = effects.define( \"transfer\", function( options, done ) {\n\t\t\t$(this).transfer( options, done );\n\t\t} );\n\t}\n\treturn effect;\n\n});\n\ndefine( 'skylark-utils-effects/main',[\r\n\t\"./effects\",\r\n\t\"./plugins/blind\",\r\n\t\"./plugins/bounce\",\r\n\t\"./plugins/clip\",\r\n\t\"./plugins/drop\",\r\n\t\"./plugins/explode\",\r\n\t\"./plugins/fade\",\r\n\t\"./plugins/fold\",\r\n\t\"./plugins/highlight\",\r\n\t\"./plugins/puff\",\r\n\t\"./plugins/pulsate\",\r\n\t\"./plugins/scale\",\r\n\t\"./plugins/shake\",\r\n\t\"./plugins/size\",\r\n\t\"./plugins/slide\",\r\n\t\"./plugins/transfer\"\r\n\r\n],function(effects){\r\n\treturn effects;\r\n});\ndefine('skylark-utils-effects', ['skylark-utils-effects/main'], function (main) { return main; });\n\n"]}